<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为dao接口提供实现 -->
<mapper namespace="org.lhpsn.seckill.dao.SeckillDao">
    <insert id="insertSeckill" parameterType="Seckill" useGeneratedKeys="true" keyProperty="id">
        INSERT IGNORE INTO seckill(product_id, product_name, quantity, start_time, end_time, gmt_create, gmt_modified)
        VALUES (#{productId}, #{productName}, #{quantity}, #{startTime}, #{endTime}, NOW(), NOW())
    </insert>
    <update id="reduceQuantity">
        UPDATE
            seckill
        SET
            quantity = quantity - 1
        WHERE id = #{id}
        AND start_time <![CDATA[<=]]> #{killTime}
        AND end_time >= #{killTime}
        AND quantity > 0;
    </update>
    <select id="getSeckillById" resultType="Seckill">
        SELECT id, product_id, product_name, quantity, start_time, end_time, gmt_create, gmt_modified
        FROM seckill
        WHERE id = #{id}
    </select>
    <select id="listSeckillByOffsetAndLimit" resultType="Seckill">
        SELECT id, product_id, product_name, quantity, start_time, end_time, gmt_create, gmt_modified
        FROM seckill
        ORDER BY gmt_create DESC
        limit #{offset}, #{limit}
    </select>
    <!-- MyBatis调用存储过程 -->
    <select id="killByProcedure" statementType="CALLABLE">
        call execute_seckill(
          #{seckillId,jdbcType=BIGINT,mode=IN},
          #{userPhone,jdbcType=BIGINT,mode=IN},
          #{killTime,jdbcType=DATE,mode=IN},
          #{result,jdbcType=INTEGER,mode=OUT}
        )
    </select>

</mapper>
        